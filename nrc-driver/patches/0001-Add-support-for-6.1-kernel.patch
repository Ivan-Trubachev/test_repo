From 9881ce964c62e9e73317112b8646baf6bca94537 Mon Sep 17 00:00:00 2001
From: Govind Singh <govind.sk85@gmail.com>
Date: Thu, 4 Apr 2024 09:04:30 +0400
Subject: [PATCH] Add support for 6.1 kernel

Signed-off-by: Govind Singh <govind@ssrc.tii.ae>
---
 Makefile           |  6 ++--
 nrc-build-config.h | 10 +++++--
 nrc-hif-cspi.c     | 47 ++++++++++++++++++++++++++++++
 nrc-netlink.c      | 10 +++++--
 4 files changed, 66 insertions(+), 7 deletions(-)

diff --git a/Makefile b/Makefile
index aebf479..54a8d20 100644
--- a/Makefile
+++ b/Makefile
@@ -2,7 +2,9 @@
 KDIR ?= /lib/modules/$(shell uname -r)/build
 CHECKPATCH ?= $(KDIR)/scripts/checkpatch.pl
 
+ifneq ("$(wildcard $(KDIR)/.config)","")
 include $(KDIR)/.config
+endif
 
 M_SRC = nrc
 
@@ -52,8 +54,8 @@ modules:
 modules_install:
 	@$(MAKE) -C $(KDIR) M=$$PWD modules_install
 
-install: modules
-	@sudo insmod $(M_SRC).ko
+install:
+	$(MAKE) -C $(KERNEL_DIR) M=$(PWD) modules_install
 
 dtb:
 	@echo "NRC overlay dtb build"
diff --git a/nrc-build-config.h b/nrc-build-config.h
index 37e4372..05b75c1 100644
--- a/nrc-build-config.h
+++ b/nrc-build-config.h
@@ -169,6 +169,10 @@
 #define CONFIG_SUPPORT_LEGACY_ACK
 #define CONFIG_SUPPORT_BEACON_BYPASS
 #endif
+#if KERNEL_VERSION(6, 2, 0) <= NRC_TARGET_KERNEL_VERSION
+#undef CONFIG_SUPPORT_NEW_NETLINK
+#define CONFIG_SUPPORT_NEWER_NETLINK
+#endif
 #if KERNEL_VERSION(3, 0, 0) <= NRC_TARGET_KERNEL_VERSION
 #define CONFIG_SUPPORT_TX_FRAMES_PENDING
 #endif
@@ -206,9 +210,9 @@
    spi_busnum_to_master fuction which is used to call spi_new_device
    has been deleted since 5.16 kernel version */
 
-#if KERNEL_VERSION(5, 16, 0) <= NRC_TARGET_KERNEL_VERSION
-#define CONFIG_SPI_USE_DT
-#endif
+// #if KERNEL_VERSION(5, 16, 0) <= NRC_TARGET_KERNEL_VERSION
+// #define CONFIG_SPI_USE_DT
+// #endif
 /* You can enable forcely in current version */
 //#define CONFIG_SPI_USE_DT
 
diff --git a/nrc-hif-cspi.c b/nrc-hif-cspi.c
index e7fd8fe..d8d3e6d 100644
--- a/nrc-hif-cspi.c
+++ b/nrc-hif-cspi.c
@@ -2594,6 +2594,53 @@ static struct spi_board_info bi = {
 #endif
 
 #ifndef CONFIG_SPI_USE_DT
+
+#if NRC_TARGET_KERNEL_VERSION >= KERNEL_VERSION(5,16,0)
+#include <linux/platform_device.h>
+static int __spi_controller_match(struct device *dev, const void *data)
+{
+	struct spi_controller *ctlr;
+	const u16 *bus_num = data;
+
+	ctlr = container_of(dev, struct spi_controller, dev);
+	
+	if(!ctlr) {
+		return 0;
+	}
+	
+	return ctlr->bus_num == *bus_num;
+}
+
+static struct spi_controller *spi_busnum_to_master(u16 bus_num)
+{
+	struct platform_device *pdev = NULL;
+	struct spi_master *master = NULL;
+	struct spi_controller *ctlr = NULL;
+	struct device *dev = NULL;
+	
+	pdev = platform_device_alloc("pdev", PLATFORM_DEVID_NONE);
+	pdev->num_resources = 0;
+	platform_device_add(pdev);
+	
+	master = spi_alloc_master(&pdev->dev, sizeof(void *));
+	if (!master) {
+		pr_err("Error: failed to allocate SPI master device\n");
+		platform_device_put(pdev);
+		return NULL;
+	}
+    
+	dev = class_find_device(master->dev.class, NULL, &bus_num, __spi_controller_match);
+	if (dev) {
+		ctlr = container_of(dev, struct spi_controller, dev);
+	}
+	
+	spi_master_put(master);
+	platform_device_put(pdev);
+	
+	return ctlr;
+}
+#endif
+
 static struct spi_device *nrc_create_spi_device (void)
 {
 	struct spi_master *master;
diff --git a/nrc-netlink.c b/nrc-netlink.c
index 9c75a52..b730ec4 100644
--- a/nrc-netlink.c
+++ b/nrc-netlink.c
@@ -30,7 +30,10 @@
 static struct nrc *nrc_nw;
 
 
-#ifdef CONFIG_SUPPORT_NEW_NETLINK
+#ifdef CONFIG_SUPPORT_NEWER_NETLINK
+static int nrc_nl_pre_doit(const struct genl_split_ops *ops,
+			   struct sk_buff *skb, struct genl_info *info)
+#elif defined(CONFIG_SUPPORT_NEW_NETLINK)
 static int nrc_nl_pre_doit(const struct genl_ops *ops,
 			   struct sk_buff *skb, struct genl_info *info)
 #else
@@ -41,7 +44,10 @@ static int nrc_nl_pre_doit(struct genl_ops *ops,
 	return 0;
 }
 
-#ifdef CONFIG_SUPPORT_NEW_NETLINK
+#ifdef CONFIG_SUPPORT_NEWER_NETLINK
+static void nrc_nl_post_doit(const struct genl_split_ops *ops,
+			     struct sk_buff *skb, struct genl_info *info)
+#elif defined(CONFIG_SUPPORT_NEW_NETLINK)
 static void nrc_nl_post_doit(const struct genl_ops *ops,
 			     struct sk_buff *skb, struct genl_info *info)
 #else
-- 
2.34.1

